/**********************************************************************
** Author: Nicolas Remy
** Copyright (C) 2002-2004 The Board of Trustees of the Leland Stanford Junior
**   University
** All rights reserved.
**
** This file is part of the "extra" module of the Geostatistical Earth
** Modeling Software (GEMS)
**
** This file may be distributed and/or modified under the terms of the 
** license defined by the Stanford Center for Reservoir Forecasting and 
** appearing in the file LICENSE.XFREE included in the packaging of this file.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** See http://www.gnu.org/copyleft/gpl.html for GPL licensing information.
**
** Contact the Stanford Center for Reservoir Forecasting, Stanford University
** if any conditions of this licensing are not clear to you.
**
**********************************************************************/

#ifndef _QEMBED_41
#define _QEMBED_41
static const unsigned int  down_png_len = 595;
static const unsigned char down_png_data[] = {
    0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,0x00,0x00,0x0d,0x49,0x48,
    0x44,0x52,0x00,0x00,0x00,0x16,0x00,0x00,0x00,0x16,0x08,0x06,0x00,0x00,
    0x00,0xc4,0xb4,0x6c,0x3b,0x00,0x00,0x00,0x04,0x67,0x41,0x4d,0x41,0x00,
    0x00,0xd6,0xd8,0xd4,0x4f,0x58,0x32,0x00,0x00,0x00,0x19,0x74,0x45,0x58,
    0x74,0x53,0x6f,0x66,0x74,0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,
    0x65,0x20,0x49,0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,
    0x65,0x3c,0x00,0x00,0x01,0xe5,0x49,0x44,0x41,0x54,0x48,0xc7,0xdd,0xd5,
    0xcf,0x4f,0xd3,0x60,0x1c,0xc7,0xf1,0xb6,0xac,0x6b,0x3b,0x36,0xcd,0x96,
    0x48,0x42,0x06,0xa8,0x98,0xa1,0x1c,0x38,0x98,0xe0,0xcd,0x0b,0x20,0xa4,
    0x10,0xa3,0x19,0x6a,0x48,0x34,0x1a,0x6e,0x10,0x16,0xe5,0xc4,0xc5,0x18,
    0x42,0x23,0x3a,0x22,0x84,0x10,0x62,0xc6,0x8f,0x31,0x06,0x54,0xb3,0xf2,
    0x60,0x3c,0xa9,0x97,0x72,0xf1,0x2f,0xfb,0xf8,0x7d,0x6a,0x6b,0xe6,0xc6,
    0x33,0x9e,0x98,0xe8,0xc1,0x26,0xaf,0x63,0xdf,0x7d,0xd2,0x7e,0x9f,0xa7,
    0x0a,0x00,0xe5,0x6f,0x50,0xfe,0x8f,0x30,0x5d,0x25,0x02,0x09,0x3b,0x24,
    0x46,0x54,0xd9,0x30,0x6a,0xdf,0x9f,0x63,0xdf,0x7f,0x26,0xb4,0x5c,0xbb,
    0x15,0xc5,0x53,0x3c,0x2e,0x1d,0x3e,0xf0,0x9f,0x62,0x85,0x0d,0x0a,0xcd,
    0x38,0xd7,0xa3,0x70,0x27,0x31,0xa5,0xc3,0x87,0xfe,0x63,0xbc,0x63,0x37,
    0x85,0x66,0x9d,0x5c,0x14,0xee,0x25,0xed,0xd2,0x61,0xd7,0x9f,0xc2,0x1a,
    0x1b,0x10,0x9a,0x73,0x7a,0xa3,0x70,0x1f,0x7f,0x1d,0xd2,0xe1,0x8f,0xfe,
    0x43,0xac,0xb3,0x7e,0xa1,0x82,0x73,0xf9,0xcf,0xc2,0x9e,0x9f,0xc7,0x26,
    0xcb,0x09,0xcd,0x3b,0x5d,0x72,0x61,0xba,0x74,0xb2,0x15,0x8d,0xd2,0xc9,
    0xe9,0x7d,0xbc,0x67,0x57,0x84,0x8a,0xe5,0xee,0xfa,0xb1,0xfb,0x4a,0x26,
    0x48,0x5b,0x34,0x7a,0xf5,0xe1,0x79,0xfb,0x5e,0x27,0x3e,0x9f,0xde,0x0d,
    0xd4,0xbe,0xdd,0xc6,0x36,0xcb,0x0a,0x95,0xbc,0x2c,0x76,0x4e,0x7a,0x50,
    0xfe,0x74,0x15,0xd3,0x85,0x34,0x0f,0x7c,0xe1,0xd3,0x41,0xb4,0xc6,0xb0,
    0x41,0x76,0x87,0x6d,0x0b,0xdb,0x5e,0x07,0x76,0x59,0x6b,0x1b,0xd5,0x4b,
    0x58,0x58,0x4a,0x63,0x22,0x9f,0x40,0x32,0xa5,0xf1,0xc0,0x93,0x70,0xa6,
    0xdb,0x1a,0xc3,0x2a,0x49,0x92,0xea,0x88,0x6d,0xa2,0xec,0x65,0x50,0x61,
    0xcd,0xf6,0x8e,0x33,0xd8,0x72,0xd3,0x58,0x5c,0xb9,0x80,0xa1,0x31,0x13,
    0xba,0xae,0xf2,0x9b,0x0b,0x24,0x4b,0x12,0x4d,0x2b,0x0e,0xe3,0x7c,0x7b,
    0x66,0x88,0x7b,0xc7,0x8e,0x63,0xdf,0x4b,0xe1,0x80,0xfd,0xae,0x54,0x4d,
    0x62,0xf1,0x6d,0x02,0x93,0x53,0x06,0x0c,0x33,0x88,0x4e,0x93,0x5c,0x78,
    0x5f,0xbc,0xe9,0x1d,0x9f,0x15,0x1f,0xb5,0x63,0x38,0xf4,0x2c,0xb8,0xec,
    0xa7,0x8a,0x6b,0xc1,0x29,0x1a,0x18,0x1e,0x8d,0xc1,0xb2,0x82,0xe8,0xab,
    0xb3,0xa2,0xad,0xc6,0xed,0x57,0x7c,0xcc,0xd6,0xf0,0xe1,0x58,0x47,0xe5,
    0x48,0x47,0x71,0x35,0x86,0x07,0x8f,0x34,0xa8,0xaa,0x52,0xbf,0xd2,0x74,
    0x63,0xb4,0xe5,0xb1,0x59,0x1f,0xb7,0xc7,0x55,0xbc,0x7e,0xa3,0x21,0x3f,
    0xa9,0xd2,0x87,0x0a,0xa2,0x2f,0x45,0x2b,0x95,0x3a,0x8f,0xc3,0x38,0x3f,
    0x64,0x8e,0x4c,0x53,0x81,0x61,0x04,0xd1,0x17,0xe7,0x45,0xa5,0x0e,0xfa,
    0x30,0xce,0xa7,0xe5,0x1a,0xb9,0x11,0x3e,0xe8,0x62,0xab,0xa8,0xf4,0x1f,
    0x24,0xdc,0x51,0xf1,0x70,0x03,0x18,0xa2,0xc3,0xfd,0x9f,0xfc,0x9a,0x7e,
    0x00,0x56,0x10,0x0a,0x0b,0xa5,0x88,0x5e,0x02,0x00,0x00,0x00,0x00,0x49,
    0x45,0x4e,0x44,0xae,0x42,0x60,0x82
};

/* Generated by qembed */
static const unsigned int  left_png_len = 693;
static const unsigned char left_png_data[] = {
    0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,0x00,0x00,0x0d,0x49,0x48,
    0x44,0x52,0x00,0x00,0x00,0x16,0x00,0x00,0x00,0x16,0x08,0x06,0x00,0x00,
    0x00,0xc4,0xb4,0x6c,0x3b,0x00,0x00,0x00,0x04,0x67,0x41,0x4d,0x41,0x00,
    0x00,0xd6,0xd8,0xd4,0x4f,0x58,0x32,0x00,0x00,0x00,0x19,0x74,0x45,0x58,
    0x74,0x53,0x6f,0x66,0x74,0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,
    0x65,0x20,0x49,0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,
    0x65,0x3c,0x00,0x00,0x02,0x47,0x49,0x44,0x41,0x54,0x48,0xc7,0xdd,0x95,
    0xbd,0x6b,0x53,0x61,0x14,0xc6,0x7f,0xcf,0x7b,0x6f,0x62,0x62,0x5b,0x63,
    0x45,0x07,0x11,0x45,0xdb,0x4a,0xa3,0xd0,0xae,0x5d,0xba,0xe8,0x50,0x5d,
    0x04,0xab,0xc5,0x0f,0xa8,0x5d,0xb4,0x9d,0x04,0x8b,0x8b,0xd0,0xc9,0x3f,
    0x43,0xc5,0x41,0xe8,0xa4,0x82,0x05,0x07,0x45,0x10,0x95,0x22,0x38,0x75,
    0xe8,0xe6,0x52,0x8b,0x83,0xa8,0x68,0x31,0x4d,0xdb,0x24,0xb4,0x37,0x39,
    0x0e,0xb9,0xb9,0xbd,0x8d,0x31,0x29,0x42,0x17,0x0f,0x3c,0xbc,0xe7,0x7e,
    0x3c,0xcf,0x39,0xef,0x79,0xcf,0x3d,0x57,0x66,0xc6,0x4e,0x98,0x63,0x87,
    0xec,0x3f,0x15,0x96,0x34,0x24,0x69,0x46,0xd2,0x19,0x49,0x4e,0x92,0x5a,
    0x92,0xcc,0xac,0x29,0x80,0xa1,0x4c,0x67,0xd2,0x2e,0x4e,0xb4,0x1b,0xf0,
    0x1c,0x48,0x01,0x5e,0x2b,0x9e,0x6b,0x91,0x69,0x7f,0x72,0x97,0x7b,0x75,
    0xe5,0x46,0x96,0x43,0xdd,0x05,0x80,0x73,0xc0,0x6e,0xc0,0xff,0xe7,0x52,
    0x48,0xba,0x90,0x6e,0xf3,0xe7,0x47,0xc6,0x7a,0xe9,0xca,0x0a,0xdf,0x8f,
    0xda,0x72,0x09,0x28,0x49,0xb2,0x3a,0xdc,0x97,0xe4,0xd7,0xca,0xa4,0x46,
    0x7d,0x2c,0xa9,0xbf,0xad,0x23,0x31,0x3f,0x3e,0xd9,0xc7,0xd1,0xde,0x0a,
    0xcb,0x6b,0x9f,0x29,0xad,0xe7,0x48,0xa7,0xf7,0xb2,0x3f,0xd3,0x8d,0x44,
    0x04,0x04,0x5f,0x7f,0xce,0x71,0x77,0xdc,0x00,0xf6,0x00,0x45,0x33,0x0b,
    0xfc,0x06,0xa2,0xe7,0x9d,0xd3,0xcc,0xf0,0xd5,0x1e,0x8e,0xf4,0x04,0xfc,
    0xca,0x2f,0x50,0x2e,0x17,0xf0,0x1d,0x04,0xeb,0x39,0xbe,0x2f,0xcd,0x21,
    0x57,0xdd,0xaa,0x5c,0x15,0x5f,0x16,0x22,0x7a,0x3b,0xb0,0x01,0x6c,0x15,
    0x96,0x74,0x36,0xd3,0x99,0x9c,0xb9,0x7e,0xb3,0x8f,0xae,0xac,0xb1,0xbc,
    0xba,0x88,0xca,0x45,0x3c,0x07,0x4e,0x55,0x11,0xe7,0x40,0xc4,0x7c,0x81,
    0xbf,0x59,0xd0,0x34,0x90,0x27,0x7e,0x08,0x92,0x3a,0x52,0x29,0xef,0xe5,
    0xd8,0xc4,0x09,0x8e,0x1d,0x5f,0x27,0x97,0xfb,0x44,0xb9,0x52,0x88,0xc8,
    0x71,0x51,0x17,0x13,0x55,0x18,0x34,0x34,0xbf,0x76,0x6e,0xf1,0x8c,0x85,
    0x8c,0xec,0xc9,0x0a,0xcb,0x2b,0x8b,0x58,0xb8,0xfd,0x78,0x3d,0x5d,0x03,
    0x51,0xb9,0x2d,0x19,0xff,0xd9,0x15,0x66,0x96,0x2f,0x15,0x2b,0x0f,0x1e,
    0x4f,0x7f,0xa4,0xbc,0xb1,0x86,0xe7,0xc0,0x57,0x08,0x17,0x5b,0xeb,0xfc,
    0x84,0x03,0x4f,0xad,0xdb,0x6d,0x6a,0xf6,0xf5,0xc6,0xa3,0x17,0xcf,0x0c,
    0x67,0x55,0x42,0x2d,0x40,0x22,0x26,0xe2,0xb9,0xf0,0x7e,0x2c,0x48,0xbd,
    0xd5,0x77,0x45,0x0e,0xb8,0xfd,0x61,0x16,0xcf,0x73,0x76,0x6d,0xf8,0x52,
    0x95,0xe8,0x14,0x96,0x20,0xb6,0xfd,0xea,0xb5,0x70,0x5e,0xf5,0x9d,0xa6,
    0xc2,0x66,0x56,0x96,0xb4,0x02,0x4c,0xbe,0x7f,0x87,0x9c,0x18,0x1d,0xb9,
    0x0c,0x5e,0x02,0x7e,0x7c,0x83,0xc2,0x2a,0x98,0x36,0x6b,0x5c,0x5b,0x8b,
    0x6b,0x91,0x44,0x00,0x54,0xfe,0x3a,0x2b,0xc2,0x80,0xfb,0x80,0xe9,0x53,
    0xa7,0xb1,0x7b,0x0f,0xb1,0x3b,0x53,0x18,0x34,0xc5,0x53,0xe0,0x20,0x90,
    0x32,0xb3,0xc6,0xdf,0xbc,0x99,0x05,0x92,0xf2,0xc0,0xad,0xb7,0x6f,0xc0,
    0x39,0x46,0x07,0x06,0xa2,0xc7,0x83,0xc0,0x0a,0x50,0x8a,0x51,0x02,0xa0,
    0x08,0xac,0x86,0x3e,0xad,0x26,0x5b,0x94,0xf9,0xe0,0x20,0x06,0x3c,0x01,
    0xba,0x80,0x03,0x40,0x47,0x0c,0x6d,0xe1,0xd4,0xf3,0xa3,0x31,0xb1,0x8d,
    0xb1,0x59,0x13,0x9f,0x02,0x0e,0x87,0xf3,0x20,0xd9,0x8a,0xa7,0xed,0xfc,
    0x4c,0x25,0xf9,0x80,0x17,0xb6,0x67,0x19,0x08,0xcc,0xac,0xd2,0x8c,0xf3,
    0x1b,0x9f,0xf3,0x34,0x4f,0x8f,0xf9,0xca,0x81,0x00,0x00,0x00,0x00,0x49,
    0x45,0x4e,0x44,0xae,0x42,0x60,0x82
};

static const unsigned int  right_png_len = 667;
static const unsigned char right_png_data[] = {
    0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,0x00,0x00,0x0d,0x49,0x48,
    0x44,0x52,0x00,0x00,0x00,0x16,0x00,0x00,0x00,0x16,0x08,0x06,0x00,0x00,
    0x00,0xc4,0xb4,0x6c,0x3b,0x00,0x00,0x00,0x04,0x67,0x41,0x4d,0x41,0x00,
    0x00,0xd6,0xd8,0xd4,0x4f,0x58,0x32,0x00,0x00,0x00,0x19,0x74,0x45,0x58,
    0x74,0x53,0x6f,0x66,0x74,0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,
    0x65,0x20,0x49,0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,
    0x65,0x3c,0x00,0x00,0x02,0x2d,0x49,0x44,0x41,0x54,0x48,0xc7,0xdd,0x94,
    0xbf,0x6b,0x53,0x51,0x14,0xc7,0x3f,0xdf,0xfb,0x5e,0xda,0x94,0xda,0xe8,
    0xa2,0xd4,0x82,0x28,0x16,0x14,0x41,0xc1,0x2e,0x82,0xa8,0x43,0xab,0x58,
    0x07,0xf1,0xe7,0xe0,0x22,0x88,0x7f,0x81,0xb8,0x88,0xe0,0xaa,0xa3,0xab,
    0x50,0x44,0x8b,0xe0,0x20,0xed,0x10,0x41,0x4b,0xa4,0xe8,0xa2,0x6e,0x52,
    0x8a,0x5d,0x1c,0x74,0x50,0x14,0x52,0x8d,0x25,0xa0,0x49,0x4d,0x6b,0x93,
    0xe3,0xf0,0x6e,0xd3,0x97,0xbe,0x24,0xd5,0xa1,0x8b,0x17,0xbe,0xdc,0xf7,
    0xe0,0xbc,0xcf,0x3d,0xe7,0x7b,0xcf,0x3b,0x32,0x33,0xd6,0x63,0x39,0xd6,
    0x69,0xfd,0xc7,0x60,0x49,0xc7,0x25,0x65,0x25,0x0d,0x4b,0x72,0x92,0xd4,
    0xf6,0x03,0x33,0xfb,0x2b,0x01,0xd9,0x4b,0x57,0x76,0xd8,0x86,0x8d,0x18,
    0x70,0x12,0xe8,0x00,0xd4,0x2a,0xfe,0x5f,0xac,0x38,0x33,0x70,0x70,0x0b,
    0x83,0x67,0x45,0xaa,0x83,0x27,0xc0,0x01,0x20,0xd5,0x2a,0x73,0xb7,0xaa,
    0xdc,0x3b,0x92,0xac,0x99,0x00,0x42,0x41,0xff,0x5e,0x38,0x7a,0x4e,0xa4,
    0xbb,0x78,0x05,0x5c,0x68,0x05,0x57,0xbc,0x8f,0x25,0xd9,0xc8,0xd8,0x30,
    0xf3,0x95,0x39,0x14,0x80,0x00,0x09,0x9c,0x03,0xb9,0x80,0xca,0x62,0x91,
    0xe2,0x8f,0xf7,0x38,0x89,0x0f,0xef,0x8c,0xec,0x3d,0xe3,0x57,0x99,0xc3,
    0xc0,0x1b,0xe0,0xb7,0xc5,0x60,0xe1,0xea,0x93,0x2a,0x95,0x39,0xf2,0x85,
    0xa9,0x18,0x10,0x9c,0xa2,0x5d,0x82,0xc0,0x81,0x9c,0xd1,0xbf,0x1b,0x86,
    0x4e,0x8b,0xdc,0x23,0x7b,0x5d,0xab,0x71,0x11,0x18,0x97,0x54,0x87,0x27,
    0x3c,0x76,0x2e,0x2a,0x39,0x14,0x84,0x0e,0x52,0x1e,0x56,0x7f,0x77,0x90,
    0x02,0xba,0x3a,0xe1,0xc8,0x31,0x71,0xf9,0xaa,0xc8,0x6c,0xe2,0x21,0x70,
    0x2a,0x6e,0x4b,0x02,0x1c,0x28,0x52,0xe8,0x61,0x41,0x7c,0x77,0x10,0xb0,
    0x72,0x40,0x28,0x63,0xcf,0x3e,0x38,0x71,0x5e,0x74,0xa6,0x19,0x07,0x36,
    0x13,0x85,0x24,0xad,0x08,0xfc,0x25,0x39,0x2f,0xc5,0xe4,0x7c,0x45,0xce,
    0xdb,0x22,0x07,0xe5,0x32,0xf4,0xf6,0x02,0x91,0xbb,0xdd,0x1e,0xb1,0x14,
    0x36,0xcb,0x38,0xf4,0xde,0x06,0x5a,0x01,0x2c,0x7b,0xee,0x62,0x9e,0x97,
    0x4a,0x30,0x37,0x0b,0x2f,0x27,0x8d,0x85,0x05,0x1e,0x03,0xf3,0x44,0x77,
    0x9e,0xcc,0xd8,0x79,0x2b,0xea,0x19,0x7b,0xd0,0x32,0x14,0xff,0x5c,0x2a,
    0x41,0x21,0x0f,0xcf,0x27,0x8c,0x99,0x69,0x72,0xc0,0x6d,0x60,0x11,0xa8,
    0x35,0xb7,0x42,0x46,0x28,0x6b,0x84,0x2a,0x99,0xe9,0xf7,0x3c,0xbc,0x98,
    0x80,0x99,0x69,0x9e,0x01,0xb7,0x80,0xcf,0x3e,0xe3,0x6a,0x53,0xf0,0xb7,
    0xaf,0x53,0x7c,0xfa,0xd8,0xd8,0x62,0xce,0x41,0x5f,0x1f,0x64,0x32,0x50,
    0xfe,0x09,0x85,0x59,0x98,0x9c,0x80,0xb7,0x11,0xf4,0x26,0xf0,0x05,0x28,
    0x02,0x15,0x33,0xab,0x26,0x66,0x05,0x30,0xe2,0xaf,0xa1,0xa9,0xee,0x8e,
    0x62,0xd7,0x6f,0x60,0xfb,0x07,0x30,0x20,0x07,0x1c,0x02,0xb6,0x03,0x3d,
    0x40,0xd8,0xc0,0x5a,0x05,0x0e,0x7d,0xd0,0x56,0x60,0x27,0xb0,0x2b,0x26,
    0xbb,0xff,0xa0,0x0e,0x7d,0xda,0x0e,0xda,0x0c,0x2c,0x0f,0x4f,0xfb,0xd6,
    0xe9,0x89,0x69,0x74,0x70,0x08,0x03,0xc6,0x80,0x81,0x76,0xd0,0x04,0x78,
    0x8d,0xb1,0xd9,0x0d,0x5c,0x03,0xb6,0xf9,0x1f,0xa1,0x25,0xd4,0xcc,0x1a,
    0x87,0xd0,0x1a,0x83,0xde,0xf9,0x6a,0x02,0xdf,0x52,0x55,0x33,0x5b,0x6a,
    0x15,0xff,0x07,0xeb,0xb2,0x41,0x22,0xd1,0xb9,0xdc,0x07,0x00,0x00,0x00,
    0x00,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82
};

static const unsigned int  up_png_len = 707;
static const unsigned char up_png_data[] = {
    0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,0x00,0x00,0x0d,0x49,0x48,
    0x44,0x52,0x00,0x00,0x00,0x16,0x00,0x00,0x00,0x16,0x08,0x06,0x00,0x00,
    0x00,0xc4,0xb4,0x6c,0x3b,0x00,0x00,0x00,0x04,0x67,0x41,0x4d,0x41,0x00,
    0x00,0xd6,0xd8,0xd4,0x4f,0x58,0x32,0x00,0x00,0x00,0x19,0x74,0x45,0x58,
    0x74,0x53,0x6f,0x66,0x74,0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,
    0x65,0x20,0x49,0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,
    0x65,0x3c,0x00,0x00,0x02,0x55,0x49,0x44,0x41,0x54,0x48,0xc7,0xb5,0x95,
    0xcd,0x4b,0x54,0x51,0x18,0xc6,0x7f,0xcf,0xb9,0x77,0x66,0xd4,0x4c,0x99,
    0x5c,0x45,0x9b,0x50,0x2a,0x21,0x9a,0xa8,0x16,0x6e,0xa4,0x20,0xc2,0x22,
    0x09,0x42,0x84,0x02,0x2d,0x5a,0x08,0x12,0x2e,0x5a,0x08,0xfd,0x09,0x2d,
    0xa2,0x16,0xd1,0xca,0x36,0x11,0xb4,0x08,0x0c,0x5a,0xb5,0x90,0x82,0x08,
    0xa2,0x4d,0xb9,0x90,0x16,0x6d,0x32,0xa1,0x16,0x51,0x39,0xf8,0x31,0x4e,
    0x8e,0xce,0xc7,0xdb,0x62,0xee,0x1d,0xef,0x0c,0x33,0xa3,0x41,0x1e,0x38,
    0x1c,0xb8,0x9c,0xf7,0x77,0x9e,0xf7,0x39,0xef,0x7d,0x8f,0xcc,0x8c,0xdd,
    0x18,0x8e,0x5d,0x1a,0x3b,0x06,0x4b,0xda,0x2b,0xa9,0xe3,0xbf,0x82,0x25,
    0x5d,0x48,0xb4,0x78,0xab,0x89,0x56,0xb7,0x22,0x69,0x4a,0x52,0x97,0x24,
    0xaf,0x69,0x90,0x99,0x35,0x9d,0xc0,0xe5,0xce,0x64,0xdc,0xc6,0x6f,0x1f,
    0xb7,0xbb,0x4f,0x52,0xd6,0x77,0x2e,0x66,0xc0,0x63,0x20,0x09,0xf8,0x8d,
    0xe2,0xdc,0x36,0x4a,0x53,0xce,0xe9,0xc5,0xf5,0x89,0x63,0xf4,0x1c,0x35,
    0x96,0x32,0x0b,0xf4,0x0f,0x16,0x39,0x71,0x5a,0x37,0x80,0x07,0x40,0x87,
    0x24,0xff,0x9f,0xac,0x90,0x34,0xb4,0xa7,0x3d,0x36,0x77,0x75,0xac,0x97,
    0xee,0x5e,0x63,0x39,0x33,0x4f,0xb1,0xb4,0x46,0xcc,0x33,0x06,0x86,0xe1,
    0xd4,0x19,0xae,0x35,0x83,0xab,0x5e,0xb9,0x49,0x4a,0xb5,0xb6,0xf9,0x73,
    0xe3,0x93,0x29,0x0e,0x74,0x17,0xc8,0xe6,0xbe,0x93,0xcb,0x2f,0x23,0x81,
    0x1c,0x38,0x01,0x06,0x33,0xcf,0x8d,0x0f,0x6f,0x78,0x0a,0xdc,0x02,0x56,
    0xcd,0xac,0xd0,0x50,0xb1,0xa4,0x81,0x78,0xc2,0xcd,0x0d,0x8d,0x1c,0xe2,
    0xe0,0xe1,0x12,0x99,0xec,0x3c,0x85,0xfc,0x0a,0xbe,0xc0,0x77,0xe0,0x0b,
    0x3c,0x81,0xef,0xc3,0xe0,0x15,0xd1,0x77,0x96,0xd1,0x7a,0xca,0xab,0x14,
    0x4b,0x1a,0xe8,0x4c,0xc6,0x67,0x46,0xc6,0x7a,0xe9,0x3e,0x22,0x72,0xf9,
    0x6f,0x6c,0xe4,0x97,0x71,0x81,0xd2,0x50,0xb1,0x5c,0x59,0x91,0x1c,0x18,
    0xf0,0xf2,0x99,0xf1,0xfe,0x75,0xb5,0xf2,0x5a,0x6f,0x6e,0x5e,0x1c,0x8e,
    0xd1,0xbe,0xef,0x13,0xe9,0x25,0x88,0x27,0xca,0x0a,0xa3,0x50,0xe7,0x40,
    0x94,0xd7,0xc5,0x9f,0x90,0xcd,0xc2,0xc9,0x3e,0xb1,0x99,0xb3,0xd1,0x8f,
    0xef,0xf8,0x0c,0xdc,0x97,0x54,0xac,0x55,0x7c,0x1e,0x98,0x00,0x2e,0x01,
    0xdc,0x7b,0x94,0x64,0x23,0xea,0x6d,0x04,0xea,0x1c,0x2c,0x7c,0x81,0x87,
    0x77,0x2a,0xf1,0xd3,0xc0,0x24,0xb0,0x08,0x6c,0xd4,0x2a,0x7e,0x05,0xbc,
    0x05,0xda,0x80,0x74,0x57,0x67,0x0f,0xbf,0xd2,0xb3,0x65,0xb0,0xaa,0xa1,
    0x4e,0x55,0x17,0xd4,0x0f,0xfc,0x00,0x56,0x80,0x22,0x60,0xb5,0x60,0x03,
    0xf2,0x40,0x16,0xca,0x97,0xe4,0x45,0x2a,0x21,0x84,0x86,0x19,0x78,0xaa,
    0xc4,0x65,0x82,0x99,0x03,0x0a,0x66,0x56,0x0d,0xb6,0xb2,0x2f,0x45,0xa0,
    0x28,0x09,0x4f,0x86,0xef,0xac,0x2e,0x54,0x0e,0xbc,0x2d,0xc9,0x39,0x20,
    0x67,0x66,0x9b,0xe1,0x07,0xbf,0x69,0x23,0x09,0x54,0x55,0xc0,0xc1,0x1a,
    0xfa,0xed,0x2b,0x28,0xe8,0x3a,0xc3,0xdf,0xae,0x43,0x79,0x35,0x07,0x28,
    0x72,0x88,0xe7,0x1a,0xf7,0xf2,0xa6,0xe0,0xf4,0xef,0x59,0x16,0xbe,0x6e,
    0x79,0x1c,0x96,0x5d,0x08,0x5e,0xff,0x53,0xd9,0x5a,0x00,0x4a,0x3b,0xea,
    0x6e,0xc0,0x54,0x90,0xe7,0x76,0x73,0x1a,0xd8,0x0f,0xb4,0x44,0xe3,0xd5,
    0xe8,0x69,0x0a,0x7e,0xcf,0x56,0xa0,0x3d,0x58,0xeb,0x65,0x57,0x00,0xd6,
    0x81,0x35,0x60,0x3d,0xda,0x2b,0x9a,0x81,0x15,0x58,0xec,0x87,0x56,0xd7,
    0xd9,0x56,0x0a,0xaa,0xa8,0x00,0x14,0x2d,0x02,0xd3,0x6e,0x3d,0xa6,0x7f,
    0x01,0x5d,0x80,0x0f,0x1b,0x52,0xe3,0x23,0x12,0x00,0x00,0x00,0x00,0x49,
    0x45,0x4e,0x44,0xae,0x42,0x60,0x82
};

#include <qcstring.h>
#include <qdict.h>
static struct Embed {
    unsigned int size;
    const unsigned char *data;
    const char *name;
} embed_vec[] = {
    { 595, down_png_data, "down.png" },
    { 693, left_png_data, "left.png" },
    { 667, right_png_data, "right.png" },
    { 707, up_png_data, "up.png" },
    { 0, 0, 0 }
};

static const QByteArray& qembed_findData( const char* name )
{
    static QDict<QByteArray> dict;
    QByteArray* ba = dict.find( name );
    if ( !ba ) {
	for ( int i = 0; embed_vec[i].data; i++ ) {
	    if ( strcmp(embed_vec[i].name, name) == 0 ) {
		ba = new QByteArray;
		ba->setRawData( (char*)embed_vec[i].data,
				embed_vec[i].size );
		dict.insert( name, ba );
		break;
	    }
	}
	if ( !ba ) {
	    static QByteArray dummy;
	    return dummy;
	}
    }
    return *ba;
}

#endif
