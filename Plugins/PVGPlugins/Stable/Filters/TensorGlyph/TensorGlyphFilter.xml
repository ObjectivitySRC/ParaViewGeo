<ServerManagerConfiguration>
       <ProxyGroup name="filters">
          <SourceProxy name="TensorGlyphFilter" class="vtkTensorGlyphFilter">
            
          <InputProperty
              name="Source"
              command="SetSourceConnection" >
            <ProxyGroupDomain name="groups">
              <Group name="sources"/>
              <Group name="filters"/>
            </ProxyGroupDomain>
            <DataTypeDomain name="input_type">
              <DataType value="vtkPolyData"/>
            </DataTypeDomain>
          </InputProperty>
            
          <InputProperty
            name="Input"
            command="SetInputConnection">
               <ProxyGroupDomain name="groups">
                 <Group name="sources"/>
                 <Group name="filters"/>
               </ProxyGroupDomain>
               <DataTypeDomain name="input_type">
                 <DataType value="vtkDataSet"/>
               </DataTypeDomain>                       
          </InputProperty>

          <IntVectorProperty
             name="Scaling"
             command="SetScaling"
             number_of_elements="1"
             default_values="1" >
            <BooleanDomain name="bool"/>
            <Documentation>
              Turn on/off scaling of glyph with eigenvalues
            </Documentation>
          </IntVectorProperty>

          <DoubleVectorProperty name="ScaleFactor"
            command="SetScaleFactor"
            number_of_elements="1"
            animateable="1"
            default_values="0.5">
            <DoubleRangeDomain name="range" min="0"/>
            <Documentation>
              Specify scale factor to scale object by. (Scale factor always affects output even if scaling is off.)
            </Documentation>
          </DoubleVectorProperty>

            <IntVectorProperty
               name="ThreeGlyphs"
               command="SetThreeGlyphs"
               number_of_elements="1"
               default_values="0" >
              <BooleanDomain name="bool"/>
              <Documentation>
                Turn on/off drawing three glyphs
              </Documentation>
            </IntVectorProperty>

            <IntVectorProperty
               name="Symmetric"
               command="SetSymmetric"
               number_of_elements="1"
               default_values="0" >
              <BooleanDomain name="bool"/>
              <Documentation>
                Turn on/off drawing a mirror of each glyph
              </Documentation>
            </IntVectorProperty>

            <DoubleVectorProperty
               name="Length"
               command="SetLength"
               number_of_elements="1"
               animateable="1"
               default_values="0.0" >
              <DoubleRangeDomain name="range" min="0" />
              <Documentation>
                Set the distance, along x, from the origin to the end of the
                source glyph. It is used to draw the symmetric glyphs.
              </Documentation>
            </DoubleVectorProperty>

            <IntVectorProperty
               name="ExtractEigenvalues"
               command="SetExtractEigenvalues"
               number_of_elements="1"
               default_values="1" >
              <BooleanDomain name="bool"/>
              <Documentation>
                Turn on/off extraction of eigenvalues from tensor.
              </Documentation>
            </IntVectorProperty>            
            
            <IntVectorProperty
               name="ColorGlyphs"
               command="SetColorGlyphs"
               number_of_elements="1"
               default_values="1" >
              <BooleanDomain name="bool"/>
              <Documentation>
                Turn on/off coloring of glyph with input scalar data or
                eigenvalues. If false, or input scalar data not present, then the
                scalars from the source object are passed through the filter.
              </Documentation>
            </IntVectorProperty>

            <IntVectorProperty
               name="ColorMode"
               command="SetColorMode"
               number_of_elements="1"
               default_values="0" >              
              <EnumerationDomain name="enum">
                <Entry value="0" text="Color By Scalars"/>
                <Entry value="1" text="Color By Eigenvalues"/>
              </EnumerationDomain>              
              <Documentation>
                Set the color mode to be used for the glyphs.  This can be set to
                use the input scalars (default) or to use the eigenvalues at the
                point.  If ThreeGlyphs is set and the eigenvalues are chosen for
                coloring then each glyph is colored by the corresponding
                eigenvalue and if not set the color corresponding to the largest
                eigenvalue is chosen.
              </Documentation>
            </IntVectorProperty>

            <IntVectorProperty
               name="EigenvaluesProduct"
               command="SetEigenvaluesProduct"
               number_of_elements="1"
               default_values="1" >
              <BooleanDomain name="bool"/>
              <Documentation>
                if COLOR_BY_EIGENVALUES is active, setting this value to 1
                will allow coloring by eigenvalues product instead
                of maximum eigenvalue. if COLOR_BY_EIGENVALUES is not used
                this property has no effect
              </Documentation>
            </IntVectorProperty>            
            
            <IntVectorProperty
               name="ClampScaling"
               command="SetClampScaling"
               number_of_elements="1"
               default_values="1" >
              <BooleanDomain name="bool"/>
              <Documentation>
                 Turn on/off scalar clamping. If scalar clamping is on, the ivar
                 MaxScaleFactor is used to control the maximum scale factor. (This is
                 useful to prevent uncontrolled scaling near singularities.)
              </Documentation>
            </IntVectorProperty>


            <DoubleVectorProperty name="MaxScaleFactor"
              command="SetMaxScaleFactor"
              number_of_elements="1"
              animateable="1"
              default_values="0.5">
              <DoubleRangeDomain name="range" min="0"/>
              <Documentation>
                Set/Get the maximum allowable scale factor. This value is compared to the
                combination of the scale factor times the eigenvalue. If less, the scale
                factor is reset to the MaxScaleFactor. The boolean ClampScaling has to
                be "on" for this to work.
              </Documentation>
            </DoubleVectorProperty>            
            
          </SourceProxy>
      </ProxyGroup>  
</ServerManagerConfiguration>
